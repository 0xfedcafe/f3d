########## Stages ##########

stages:
  - deps # Empty for lin
  - build
  - test
  - package # Empty for rel

########## OS specific tags and variables ##########

.lin:
  tags:
    - docker
    - linux
    - x11

.lin_docker_vtk:
  extends:
    - .lin
  image: gitlab.kitware.com:4567/f3d/f3d/linux-deps:latest

.lin_docker_rel:
  extends:
    - .lin
  image: gitlab.kitware.com:4567/f3d/f3d/linux-deps:9.0.1

.lin_empty:
  script:
    - [ "true" ]
  extends:
    - .lin

.win:
  variables:
    GIT_CLONE_PATH: "$CI_BUILDS_DIR\\f3d-ci"
  tags:
    - windows
    - f3d

.win_env:
  before_script:
    - $CMAKEPath = Join-Path -Path $pwd -ChildPath dependencies\cmake-3.19.3-win64-x64\bin\
    - $NSISPath = Join-Path -Path $pwd -ChildPath dependencies\nsis-3.06.1\Bin\
    - $env:Path += ";$NSISPath;$CMAKEPath"

.win_empty:
  script:
    - $true
  extends:
    - .win

.mac:
  variables:
    GIT_CLONE_PATH: "$CI_BUILDS_DIR\\f3d-ci"
    DEVELOPER_DIR: "/Applications/Xcode-11.7.app/Contents/Developer"
  tags:
    - macos
    - xcode-11.7
    - f3d

.mac_env:
  before_script:
    - export PATH=$(pwd)/dependencies/cmake-3.19.4-macos-universal/CMake.app/Contents/bin/:$PATH

.mac_empty:
  script:
    - [ "true" ]
  extends:
    - .mac

########## Cross-platform scripts ##########

.when:automatic:
  rules:
    - if: '$CI_MERGE_REQUEST_ID'
      when: on_success
    - if: '$CI_PROJECT_PATH == "f3d/f3d"'
      when: delayed
      start_in: 5 minutes
    - when: never

.when:dependent:
  rules:
    - if: '$CI_MERGE_REQUEST_ID'
      when: on_success
    - if: '$CI_PROJECT_PATH == "f3d/f3d"'
      when: on_success
    - when: never

.build:
  stage: build
  script:
    - mkdir build
    - cd build
    - cmake $BUILD_ARCHITECTURE $ADDITIONAL_OPTIONS $RUNTIME_OPTION $POLICY_OPTION
      -DBUILD_TESTING=ON -DF3D_STRICT_BUILD=ON -DF3D_MODULE_OCCT=ON
      -DCMAKE_BUILD_TYPE=Release -DVTK_DIR:PATH=$VTK_DIR -DOpenCASCADE_DIR:PATH=$OCCT_DIR
      -DF3D_INSTALL_DEFAULT_CONFIGURATION_FILE=ON ..
    - cmake --build . --config Release --parallel 8

.test:
  stage: test
  script:
    - cd build
    - ctest -C Release -j 8 --output-on-failure
  artifacts:
    when: on_failure
    paths:
      - build/Test*.png

.pack:
  stage: package
  script:
    - cd build
    - cpack -C Release

########## Linux Specific ##########

### Deps Linux ###

.deps:lin:
  stage: deps
  extends:
    - .lin_empty

deps:lin:rel:
  extends:
    - .deps:lin
    - .when:automatic

deps:lin:
  extends:
    - .deps:lin
    - .when:automatic

deps:lin:cov:
  extends:
    - .deps:lin
    - .when:automatic

### Build Linux ###

.build:lin:
  extends:
    - .build
  variables:
    VTK_DIR: /vtk_install/lib/cmake/vtk-9.0
    OCCT_DIR: /occt_install/lib/cmake/opencascade

build:lin:
  extends:
    - .build:lin
    - .lin_docker_vtk
    - .when:dependent
  dependencies:
    - deps:lin
  needs:
    - deps:lin
  variables:
    ADDITIONAL_OPTIONS: -DF3D_INSTALL_DEFAULT_CONFIGURATION_FILE_IN_PREFIX=ON
  artifacts:
    paths:
      - build

build:lin:cov:
  extends:
    - .build:lin
    - .lin_docker_vtk
    - .when:dependent
  dependencies:
    - deps:lin:cov
  needs:
    - deps:lin:cov
  variables:
    ADDITIONAL_OPTIONS: -DF3D_COVERAGE=ON
  artifacts:
    paths:
      - build

build:lin:rel:
  extends:
    - .build:lin
    - .lin_docker_rel
    - .when:dependent
  dependencies:
    - deps:lin:rel
  needs:
    - deps:lin:rel
  artifacts:
    paths:
      - build

### Test Linux ###

test:lin:rel:
  stage: test
  extends:
    - .lin
    - .test
    - .lin_docker_vtk
    - .when:dependent
  dependencies:
    - build:lin:rel
  needs:
    - build:lin:rel
  artifacts:
    paths:
      - build

test:lin:
  extends:
    - .lin
    - .test
    - .lin_docker_vtk
    - .when:dependent
  dependencies:
    - build:lin
  needs:
    - build:lin
  artifacts:
    paths:
      - build

test:lin:cov:
  extends:
    - .lin
    - .test
    - .lin_docker_vtk
    - .when:dependent
  after_script:
    - cd build
    - gcovr --xml-pretty --exclude-unreachable-branches --exclude cxxopts.h --print-summary -o coverage.xml --root ${CI_PROJECT_DIR}
  coverage: /^\s*lines:\s*\d+.\d+\%/
  dependencies:
    - build:lin:cov
  needs:
    - build:lin:cov
  artifacts:
    reports:
      cobertura: build/coverage.xml

### Pack Linux ###

pack:lin:rel:
  stage: package
  extends:
    - .lin_empty
    - .when:dependent
  needs:
    - build:lin:rel

pack:lin:
  extends:
    - .lin
    - .pack
    - .lin_docker_vtk
    - .when:dependent
  dependencies:
    - build:lin
  needs:
    - build:lin
  artifacts:
    paths:
      - build/f3d-*.tar.gz
      - build/f3d-*.tar.xz

pack:lin:cov:
  stage: package
  extends:
    - .lin_empty
    - .when:dependent
  needs:
    - build:lin:cov

########## Windows Specific ##########

### Deps Windows ###

.deps:win:
  stage: deps
  script:
    - $env:GIT_LFS_SKIP_SMUDGE="1"
    - git clone https://gitlab.kitware.com/f3d/f3d-dependencies.git
    - cd f3d-dependencies
    - git lfs pull --include "windows/archive/nsis-3.06.1.zip"
    - git lfs pull --include "windows/archive/$VTK_ARCHIVE"
    - git lfs pull --include "windows/archive/$OCCT_ARCHIVE"
    - cd ..\
    - $ProgressPreference = 'SilentlyContinue'
    - Invoke-WebRequest https://github.com/Kitware/CMake/releases/download/v3.19.3/cmake-3.19.3-win64-x64.zip -OutFile .\cmake-3.19.3-win64-x64.zip 
    - $CmakeHash = (Get-FileHash .\cmake-3.19.3-win64-x64.zip -Algorithm MD5).Hash
    - $CmakeHash -eq "6bbe95ee440c42ddd249f356d3ebd056"
    - mkdir dependencies
    - cd dependencies
    - tar -xf ..\cmake-3.19.3-win64-x64.zip
    - cmake -E tar -x ../f3d-dependencies/windows/archive/nsis-3.06.1.zip
    - cmake -E tar -x ../f3d-dependencies/windows/archive/$VTK_ARCHIVE
    - cmake -E tar -x ../f3d-dependencies/windows/archive/$OCCT_ARCHIVE
  extends:
    - .win
    - .win_env
  artifacts:
    paths:
      - dependencies

deps:win:
  extends:
    - .deps:win
    - .when:automatic
  variables:
    VTK_ARCHIVE: vtk-latest.zip
    OCCT_ARCHIVE: occt-latest.zip

deps:win:rel:
  extends:
    - .deps:win
    - .when:automatic
  variables:
    VTK_ARCHIVE: vtk-9.0.1.zip
    OCCT_ARCHIVE: occt-latest.zip

### Build Windows ###

.build:win:
  extends:
    - .win
    - .win_env
    - .build
  variables:
    BUILD_ARCHITECTURE: -Ax64
    ADDITIONAL_OPTIONS: -DF3D_WINDOWS_GUI=ON
    POLICY_OPTION: -DCMAKE_POLICY_DEFAULT_CMP0091=NEW
    RUNTIME_OPTION: -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded
    VTK_DIR: ..\dependencies\vtk_install\lib\cmake\vtk-9.0\
    OCCT_DIR: ..\dependencies\occt_install\cmake\

build:win:
  extends:
    - .build:win
    - .when:dependent

build:win:
  extends:
    - .build:win
    - .when:dependent
  dependencies:
    - deps:win
  needs:
    - deps:win
  artifacts:
    paths:
      - dependencies
      - build

build:win:rel:
  extends:
    - .build:win
    - .when:dependent
  dependencies:
    - deps:win:rel
  needs:
    - deps:win:rel
  artifacts:
    paths:
      - dependencies
      - build

### Test Windows ###

test:win:
  extends:
    - .win
    - .win_env
    - .test
    - .when:dependent
  dependencies:
    - build:win
  needs:
    - build:win
  artifacts:
    paths:
      - build

test:win:rel:
  stage: test
  extends:
    - .win
    - .win_env
    - .test
    - .when:dependent
  dependencies:
    - build:win:rel
  needs:
    - build:win:rel
  artifacts:
    paths:
      - build

### Package Windows ###

pack:win:
  extends:
    - .win
    - .win_env
    - .pack
    - .when:dependent
  dependencies:
    - build:win
  needs:
    - build:win
  artifacts:
    paths:
      - build/f3d-*.zip
      - build/f3d-*.exe

pack:win:rel:
  stage: package
  extends:
    - .win_empty
    - .when:dependent
  needs:
    - build:win:rel

########## MacOS Specific ##########

### Deps MacOS ###

.deps:mac:
  stage: deps
  script:
    - mkdir dependencies
    - GIT_LFS_SKIP_SMUDGE=1 git clone https://gitlab.kitware.com/f3d/f3d-dependencies
    - cd f3d-dependencies
    - git lfs pull --include "macos/archive/$VTK_ARCHIVE"
    - git lfs pull --include "macos/archive/$OCCT_ARCHIVE"
    - cd ../
    - tar -zxf f3d-dependencies/macos/archive/$VTK_ARCHIVE -C ./dependencies
    - tar -zxf f3d-dependencies/macos/archive/$OCCT_ARCHIVE -C ./dependencies
    - cd dependencies
    - curl -OL https://github.com/Kitware/CMake/releases/download/v3.19.4/cmake-3.19.4-macos-universal.tar.gz
    - echo "eb1f52996632c1e71a1051c9e2c30cc8df869fb5a213b1a0d3b202744c6c5758  cmake-3.19.4-macos-universal.tar.gz" | shasum -a 256 --check
    - tar -zxf cmake-3.19.4-macos-universal.tar.gz
  extends:
    - .mac
  artifacts:
    paths:
      - dependencies

deps:mac:
  extends:
    - .deps:mac
    - .when:automatic
  variables:
    VTK_ARCHIVE: vtk-latest.tar.gz
    OCCT_ARCHIVE: occt-latest.tar.gz

deps:mac:rel:
  extends:
    - .deps:mac
    - .when:automatic
  variables:
    VTK_ARCHIVE: vtk-9.0.1.tar.gz
    OCCT_ARCHIVE: occt-latest.tar.gz

### Build MacOS ###

.build:mac:
  extends:
    - .mac
    - .mac_env
    - .build
  variables:
    ADDITIONAL_OPTIONS: -DF3D_MACOS_BUNDLE=ON
    VTK_DIR: ../dependencies/vtk_install/lib/cmake/vtk-9.0
    OCCT_DIR: ../dependencies/occt_install/lib/cmake/opencascade

build:mac:
  extends:
    - .build:mac
    - .when:dependent
  dependencies:
    - deps:mac
  needs:
    - deps:mac
  artifacts:
    paths:
      - dependencies
      - build

build:mac:rel:
  extends:
    - .build:mac
    - .when:dependent
  dependencies:
    - deps:mac:rel
  needs:
    - deps:mac:rel
  artifacts:
    paths:
      - dependencies
      - build

### Test MacOS ###

test:mac:
  extends:
    - .mac
    - .mac_env
    - .test
    - .when:dependent
  dependencies:
    - build:mac
  needs:
    - build:mac
  artifacts:
    paths:
      - build

test:mac:rel:
  stage: test
  extends:
    - .mac
    - .mac_env
    - .test
    - .when:dependent
  dependencies:
    - build:mac:rel
  needs:
    - build:mac:rel
  artifacts:
    paths:
      - build

### Package MacOS ###

pack:mac:
  extends:
    - .mac
    - .mac_env
    - .pack
    - .when:dependent
  dependencies:
    - build:mac
  needs:
    - build:mac
  artifacts:
    paths:
      - build/f3d-*.dmg

pack:mac:rel:
  stage: package
  extends:
    - .mac_empty
    - .when:dependent
  needs:
    - build:mac:rel
